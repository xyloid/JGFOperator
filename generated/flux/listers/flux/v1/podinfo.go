/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "fluxframework.io/jgfoperator/apis/flux/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodInfoLister helps list PodInfos.
// All objects returned here must be treated as read-only.
type PodInfoLister interface {
	// List lists all PodInfos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.PodInfo, err error)
	// PodInfos returns an object that can list and get PodInfos.
	PodInfos(namespace string) PodInfoNamespaceLister
	PodInfoListerExpansion
}

// podInfoLister implements the PodInfoLister interface.
type podInfoLister struct {
	indexer cache.Indexer
}

// NewPodInfoLister returns a new PodInfoLister.
func NewPodInfoLister(indexer cache.Indexer) PodInfoLister {
	return &podInfoLister{indexer: indexer}
}

// List lists all PodInfos in the indexer.
func (s *podInfoLister) List(selector labels.Selector) (ret []*v1.PodInfo, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PodInfo))
	})
	return ret, err
}

// PodInfos returns an object that can list and get PodInfos.
func (s *podInfoLister) PodInfos(namespace string) PodInfoNamespaceLister {
	return podInfoNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodInfoNamespaceLister helps list and get PodInfos.
// All objects returned here must be treated as read-only.
type PodInfoNamespaceLister interface {
	// List lists all PodInfos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.PodInfo, err error)
	// Get retrieves the PodInfo from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.PodInfo, error)
	PodInfoNamespaceListerExpansion
}

// podInfoNamespaceLister implements the PodInfoNamespaceLister
// interface.
type podInfoNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodInfos in the indexer for a given namespace.
func (s podInfoNamespaceLister) List(selector labels.Selector) (ret []*v1.PodInfo, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PodInfo))
	})
	return ret, err
}

// Get retrieves the PodInfo from the indexer for a given namespace and name.
func (s podInfoNamespaceLister) Get(name string) (*v1.PodInfo, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("podinfo"), name)
	}
	return obj.(*v1.PodInfo), nil
}
